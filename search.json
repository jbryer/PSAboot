[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jason@bryer.org. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/articles/MatchingOrder.html","id":"matching-procedures","dir":"Articles","previous_headings":"","what":"Matching Procedures","title":"Impact of Data Order for Propensity Score Matching","text":"","code":"boot.matchit.random <- function(Tr, Y, X, X.trans, formu, ...) {     boot.matchit(Tr = Tr, Y = Y, X = X, X.trans = X.trans, formu = formu, m.order = 'random', ...) }  boot.matching.random <- function(Tr, Y, X, X.trans, formu, ...) {     boot.matching(Tr = Tr, Y = Y, X = X, X.trans = X.trans, formu = formu, replace = FALSE) }  SimpleMatch <- function(Tr, Y, X, X.trans, formu, caliper = 0.25, ...) {     if(!is.logical(Tr)) {         Tr <- as.logical(Tr)     }     formu <- update.formula(formu, 'treat ~ .')     ps <- fitted(glm(formu, data = cbind(treat = Tr, X), family = binomial(logit)))     matches <- data.frame(Treat = which(Tr), Treat.Y = Y[Tr], Treat.ps = ps[Tr],                           Control = as.integer(NA), Control.Y = as.numeric(NA),                            Control.ps = as.numeric(NA))     available.Control <- !Tr     for(i in which(Tr)) {         d <- abs(ps[i] - ps[!Tr & available.Control])         if((min(d) / sd(ps)) < caliper)             m <- which(!Tr & available.Control)[which(d == min(d))]         if(length(m) > 1) {             m <- m[1]         }         if(length(m) > 0) {             matches[matches$Treat == i,]$Control <- m             matches[matches$Treat == i,]$Control.Y <- Y[m]             matches[matches$Treat == i,]$Control.ps <- ps[m]             available.Control[m] <- FALSE         }     }     match.t <- t.test(matches$Treat.Y, matches$Control.Y, paired = TRUE)      return(list(         summary = c(estimate = unname(match.t$estimate),                   ci.min = match.t$conf.int[1],                   ci.max = match.t$conf.int[2],                   p = match.t$p.value,                   t = unname(match.t$statistic)),         details = c(Matches = matches, t.test = match.t),         balance = balance.matching(matches$Treat, matches$Control, X.trans) )) }"},{"path":"/articles/MatchingOrder.html","id":"example-1-lalonde","dir":"Articles","previous_headings":"","what":"Example 1: Lalonde","title":"Impact of Data Order for Propensity Score Matching","text":"First example use classic lalonde data (LaLonde, 1986; Dehejia & Wahba, 1999). Typically, bootstrapping draws M random samples replacement. However, setting control.replace treated.replace parameters FALSE bootstrap sample sizes equal number observations can evaluate impact ordering. Boxplot estimated effect sizes.","code":"data(\"lalonde\", package = 'Matching') lalonde.boot <- PSAboot(Tr = lalonde$treat,                         Y = lalonde$re78,                         X = lalonde[,c(1:8)],                         seed = 2112,                         M = boot.M,                         control.sample.size = 260, control.replace = FALSE,                         treated.sample.size = 185, treated.replace = FALSE,                         methods = c(getPSAbootMethods()[c('Matching','MatchIt')],                                     'MatchingRandom' = boot.matching.random,                                     'MatchItRandom' = boot.matchit.random,                                     'NearestNeighbor' = SimpleMatch)) ## 10 bootstrap samples using 5 methods. ## Bootstrap sample sizes: ##    Treated=185 (100%) without replacement. ##    Control=260 (100%) without replacement. boxplot(lalonde.boot) lalonde.bal <- balance(lalonde.boot) tmp.bal <- melt(lalonde.bal$pooled) tmp.est <- lalonde.boot$pooled.summary[,c('iter','method','estimate')] tmp <- merge(tmp.bal, tmp.est, by.x = c('Var1','Var2'), by.y = c('iter','method')) ggplot(tmp, aes(x = value, y = estimate, group = Var2)) + geom_point(alpha = .5) +      facet_wrap(~ Var2, nrow = 1) + xlab('Balance') + ylab('Estimate')"},{"path":"/articles/MatchingOrder.html","id":"exmaple-2-tutoring","dir":"Articles","previous_headings":"","what":"Exmaple 2: Tutoring","title":"Impact of Data Order for Propensity Score Matching","text":"","code":"data(tutoring, package = 'TriMatch') tutoring$treatbool <- tutoring$treat != 'Control' tutoring.boot <- PSAboot(Tr = tutoring$treatbool,                           Y = tutoring$Grade,                           X = tutoring[,c('Gender', 'Ethnicity', 'Military', 'ESL',                                       'EdMother', 'EdFather', 'Age', 'Employment',                                       'Income', 'Transfer', 'GPA')],                           seed = 2112,                          M = boot.M,                          control.sample.size =918, control.replace  = FALSE,                          treated.sample.size =224, treated.replace  = FALSE,                          methods =c(getPSAbootMethods()[c('Matching','MatchIt')],                                   'MatchingRandom' = boot.matching.random,                                   'MatchItRandom' = boot.matchit.random,                                   'NearestNeighbor' = SimpleMatch)) ## 10 bootstrap samples using 5 methods. ## Bootstrap sample sizes: ##    Treated=224 (100%) without replacement. ##    Control=918 (100%) without replacement. boxplot(tutoring.boot) tutoring.bal <- balance(tutoring.boot) tmp.bal <- melt(tutoring.bal$pooled) tmp.est <- tutoring.boot$pooled.summary[,c('iter','method','estimate')] tmp <- merge(tmp.bal, tmp.est, by.x = c('Var1','Var2'), by.y = c('iter','method')) ggplot(tmp, aes(x = value, y = estimate, group = Var2)) + geom_point(alpha = .5) +      facet_wrap(~ Var2, nrow = 1) + xlab('Balance') + ylab('Estimate')"},{"path":"/articles/MatchingOrder.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Impact of Data Order for Propensity Score Matching","text":"Daniel E. Ho, Kosuke Imai, Gary King, Elizabeth . Stuart (2011). MatchIt: Nonparametric Preprocessing Parametric Causal Inference. Journal Statistical Software, Vol. 42, . 8, pp. 1-28. URL https://www.jstatsoft.org/v42/i08/ Jasjeet S. Sekhon (2011). Multivariate Propensity Score Matching Software Automated Balance Optimization: Matching Package R. Journal Statistical Software, 42(7), 1-52. URL https://www.jstatsoft.org/v42/i07/. Lunt, M. (2014). Selecting appropriate caliper can essential achieving good balance propensity score matching. Practice Epidemiology, 179(2), 226-235.","code":""},{"path":"/articles/PSAboot.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bootstrapping for Propensity Score Analysis","text":"latest version PSAboot package can downloaded Github using devtools package. PSAboot function perform actual bootstrapping. number parameters specify bootstrap samples drawn. Tr - numeric (0 control 1 treatment) logical vector treatment indicators. Y - numeric vector outcome interest. X - data frame covaraites. M (default 100) - number bootstrap samples draw. formu - formula estimating propensity scores phase . Note dependent variable need specified replaced combining Tr vector X data frame. control.ratio (default 5) - specifies sample size control units ratio treatment units. example, default value 5 100 treatment units, methods sample 500 control units sample, number control units smaller 500. ratio treatment--control units increases, range propensity scores (using logistic regression) shrinks. Randomly selecting subset control units often results wider better overlapping distribution propensity scores. See PSranges function multilevelPSA package information. control.sample.size (default 5 times number treatment units) - number control units sample bootstrap sample. specified, overrides control.ratio parameter. control.replace (default TRUE) - Specify whether random sampling control units replacement. treated.sample.size (default number treatment units) - number treatment units sample bootstrap sample. treated.replace (default TRUE) - Specify whether random sampling treatment units replacement. methods - list functions perform propensity score analysis bootstrap sample. See methods section . parallel (default TRUE) - Whether bootstrapping procedure run parallel. seed - Seed used random number generator. specified, random seed set seed + current bootstrap sample (1, M). parameters can passed methods using ... parameter.","code":"devtools::install_github('jbryer/PSAboot')"},{"path":"/articles/PSAboot.html","id":"methods","dir":"Articles","previous_headings":"Introduction","what":"Methods","title":"Bootstrapping for Propensity Score Analysis","text":"methods parameter PSAboot function specifies different propensity score methods used. Specifically, bootstrap sample drawn, function called. allows comparison methods across bootstrap samples. Five methods included, : boot.strata - method estimates propensity scores using logistic regression stratifies using quintiles propensity scores. Effects within strata estimated aggregated. boot.ctree - method creates strata using conditional inference trees vis--vis ctree function party package. Effects within strata (.e. leaf node) estimated aggregated. boot.rpart - method creates strata using classification trees vis--vis rpart function. Effects within strata (.e. leaf node) estimated aggregated. boot.matching - method finds matched pairs using Match function Matching package. paired dependent sample t-test used estimate effect sizes. boot.matchit - method finds match pairs using matchit function MatchIt package. paired dependent sample t-ttest used estimate effect sizes.","code":""},{"path":"/articles/PSAboot.html","id":"defining-custom-methods","dir":"Articles","previous_headings":"Introduction > Methods","what":"Defining Custom Methods","title":"Bootstrapping for Propensity Score Analysis","text":"possible define custom method. method function , minimum, following six parameters: Tr - logical integer (0 1) vector treatment indicators. Y - numeric vector representing outcome. X - data frame covariates. X.trans - data frame factor levels dummy coded. formu - formula estimating propensity scores phase one. ... - parameters passed PSAboot function. method must return list three elements: summary - must named numeric vector minimum estimate, ci.min, ci.max, however values allowed. balance - must named numeric vector one element per covariate listed X.trans representing balance statistic. recommended, implementation built-methods, use absolute standardized effect size. shown , summary plotting functions include adjusted balance statistic (.e. effect size) adjustment comparison. details - can arbitrary object, typically result underlying method used. example, boot.matching.1to3 function wraps built-boot.matching method sets M parameter 3, thereby performing 1--3 matching instead default 1--1 matching. framework simplifies process using, comparing, slight variations different propensity score methods. PSAboot function returns object class PSAboot. following S3 methods implemented: print, summary, plot, boxplot, matrixplot.","code":"boot.matching.1to3 <- function(Tr, Y, X, X.trans, formu, ...) {     return(boot.matching(Tr=Tr, Y=Y, X=X, X.trans=X.trans, formu=formu, M=3, ...)) }"},{"path":"/articles/PSAboot.html","id":"example-one-national-work-demonstration-and-psid","dir":"Articles","previous_headings":"","what":"Example One: National Work Demonstration and PSID","title":"Bootstrapping for Propensity Score Analysis","text":"lalonde (Lalonde, 1986) become de defacto teaching dataset PSA since Dehejia Wahba’s (1999) re-examination National Supported Work Demonstration (NSW) Current Population Survey (CPS). lalonde data set included Matching package. contingency table shows 429 control units 185 treatment units. summary function provides numeric results method including overall estimate confidence interval using complete sample well pooled estimates confidence intervals percentages number confidence intervals span zero. plot function plots estimate (mean difference) bootstrap sample. default sort largest smallest estimate method separately. , rows correspond across methods. sort parameter can set none sorting name method sort based upon results method. cases rows correspond matching bootstrap samples. blue points correspond estimate bootstrap sample horizontal line confidence interval. Confidence intervals span zero colored red. vertical blue line green lines correspond overall pooled estimate confidence method, respectively.  hist function plots histogram estimates across bootstrap samples method.  boxplot function depicts distribution estimates method along confidence intervals green. Additionally, overall pooled estimate confidence interval across bootstrap samples methods represented vertical blue green lines, respectively.  matrixplot summarizes estimates across methods bootstrap sample. lower half matrix scatter plots point represents one bootstrap sample. red line Loess regression line. main diagonal depicts distribution effects upper half provides correlation estimates. following example see ctree Stratification methods strongest agreement correlation 0.63 whereas rpart MatchIt methods least agreement correlation 0.22.","code":"data(lalonde, package='Matching') table(lalonde$treat) ##  ##   0   1  ## 260 185 lalonde.formu <- treat~age + I(age^2) + educ + I(educ^2) + black +              hisp + married + nodegr + re74  + I(re74^2) + re75 + I(re75^2) +              u74 + u75 boot.lalonde <- PSAboot(Tr = lalonde$treat,                          Y = lalonde$re78,                         X = lalonde,                         formu = lalonde.formu,                         M = 100,                          seed = 2112) summary(boot.lalonde) ## Stratification Results: ##    Complete estimate = 1493 ##    Complete CI = [231, 2755] ##    Bootstrap pooled estimate = 1426 ##    Bootstrap weighted pooled estimate = 1376 ##    Bootstrap pooled CI = [89.1, 2762] ##    59% of bootstrap samples have confidence intervals that do not span zero. ##       59% positive. ##       0% negative. ## ctree Results: ##    Complete estimate = 1598 ##    Complete CI = [-6.62, 3203] ##    Bootstrap pooled estimate = 1457 ##    Bootstrap weighted pooled estimate = 1463 ##    Bootstrap pooled CI = [170, 2743] ##    39% of bootstrap samples have confidence intervals that do not span zero. ##       39% positive. ##       0% negative. ## rpart Results: ##    Complete estimate = 1332 ##    Complete CI = [-295, 2959] ##    Bootstrap pooled estimate = 1429 ##    Bootstrap weighted pooled estimate = 1442 ##    Bootstrap pooled CI = [-136, 2993] ##    32% of bootstrap samples have confidence intervals that do not span zero. ##       32% positive. ##       0% negative. ## Matching Results: ##    Complete estimate = 1069 ##    Complete CI = [396, 1742] ##    Bootstrap pooled estimate = 1370 ##    Bootstrap weighted pooled estimate = 1364 ##    Bootstrap pooled CI = [-322, 3062] ##    83% of bootstrap samples have confidence intervals that do not span zero. ##       83% positive. ##       0% negative. ## MatchIt Results: ##    Complete estimate = 2053 ##    Complete CI = [657, 3450] ##    Bootstrap pooled estimate = 1755 ##    Bootstrap weighted pooled estimate = 1745 ##    Bootstrap pooled CI = [356, 3154] ##    74% of bootstrap samples have confidence intervals that do not span zero. ##       74% positive. ##       0% negative. ## Weighting Results: ##    Complete estimate = 1558 ##    Complete CI = [310, 2807] ##    Bootstrap pooled estimate = 1489 ##    Bootstrap weighted pooled estimate = 1440 ##    Bootstrap pooled CI = [126, 2853] ##    64% of bootstrap samples have confidence intervals that do not span zero. ##       64% positive. ##       0% negative. plot(boot.lalonde) hist(boot.lalonde) boxplot(boot.lalonde) matrixplot(boot.lalonde)"},{"path":"/articles/PSAboot.html","id":"evaluating-balance","dir":"Articles","previous_headings":"Example One: National Work Demonstration and PSID","what":"Evaluating Balance","title":"Bootstrapping for Propensity Score Analysis","text":"strength propensity score analysis relies achieving good balance. Typically one evaluate covariate separately ensure sufficient balance achieved. recommend Helmreich Pruzek (2009) complete discussion visualizations evaluate balance. Given large number samples methods used, desirable single metric evaluate balance. Drawing principles multiple covariate balance assessment plot (Helmreich & Pruzek, 2009), balance function estimate effect covariate adjustment. Moreover, provide single metric sample method, mean standardized effect size used. plot function provides density plots balance statistics across bootstrap samples method. mean overall balance represented vertical black lines, overall balance complete dataset represented vertical blue line, adjusted balance represented vertical red line. Although specific guidelines recommended literature, achieving balance less 0.1 desirable. example see PSA reduce bias methods although rpart, lesser extent MatchIt, reduce bias much typically desired.  boxplot function provides nuanced depiction balance separating distribution balance statistics individual covariate. addition boxplot balance statistics, mean balance statistic represented blue point unadjusted balance statistic red point. see largest imbalance black, married, re74 (real earnings 1974) adjustment. estimates reduced bias covariates although worth noting MatchIt method reduce bias black covariate desirable level. figure, conjunction density plot , show relatively large mean balance rpart likely due outlier samples adjusted balance educ, re75, hispan fairly large. noted exceptions, balance covariates generally less unadjusted balance.","code":"lalonde.bal <- balance(boot.lalonde) lalonde.bal ## Unadjusted balance: 1.48309081605193 ##                   Complete  Bootstrap ## Stratification 0.024000000 0.03798000 ## ctree          0.079000000         NA ## rpart          0.052000000 0.07308000 ## Matching       0.026830233 0.07148576 ## MatchIt        0.054672952 0.08836800 ## Weighting      0.006256676 0.02756140 plot(lalonde.bal) boxplot(lalonde.bal)"},{"path":"/articles/PSAboot.html","id":"example-two-effectiveness-of-tutoring-on-course-grades","dir":"Articles","previous_headings":"","what":"Example Two: Effectiveness of Tutoring on Course Grades","title":"Bootstrapping for Propensity Score Analysis","text":"example utilizes dataset TriMatch package provides student data online English courses. original study examined effects tutoring English course grades. original study two treatments defined, used tutoring services used tutoring services two times course term. outcome interest course grade (0=F, 1=D, 2=C, 3=B, 4=). purposes consider one treatment group: students used tutoring services least course.","code":"require(TriMatch) require(PSAboot) data(tutoring, package='TriMatch') tutoring$treatbool <- tutoring$treat != 'Control' covs <- tutoring[,c('Gender', 'Ethnicity', 'Military', 'ESL', 'EdMother', 'EdFather',                     'Age', 'Employment', 'Income', 'Transfer', 'GPA')]  table(tutoring$treatbool) ##  ## FALSE  TRUE  ##   918   224 tutoring.boot <- PSAboot(Tr=tutoring$treatbool,                           Y=tutoring$Grade,                           X=covs,                           seed=2112,                          M=boot.M,                          control.sample.size=918, control.replace=TRUE,                          treated.sample.size=224, treated.replace=TRUE,                          methods=c('Stratification'=boot.strata,                                   'ctree'=boot.ctree,                                   'rpart'=boot.rpart,                                   'Matching'=boot.matching,                                   'Matching-1-to-3'=boot.matching.1to3,                                   'MatchIt'=boot.matchit) ) summary(tutoring.boot) ## Stratification Results: ##    Complete estimate = 0.482 ##    Complete CI = [0.3, 0.665] ##    Bootstrap pooled estimate = 0.433 ##    Bootstrap weighted pooled estimate = 0.43 ##    Bootstrap pooled CI = [0.331, 0.535] ##    100% of bootstrap samples have confidence intervals that do not span zero. ##       100% positive. ##       0% negative. ## ctree Results: ##    Complete estimate = 0.458 ##    Complete CI = [0.177, 0.739] ##    Bootstrap pooled estimate = 0.422 ##    Bootstrap weighted pooled estimate = 0.423 ##    Bootstrap pooled CI = [0.262, 0.582] ##    90% of bootstrap samples have confidence intervals that do not span zero. ##       90% positive. ##       0% negative. ## rpart Results: ##    Complete estimate = 0.475 ##    Complete CI = [0.165, 0.784] ##    Bootstrap pooled estimate = 0.384 ##    Bootstrap weighted pooled estimate = 0.381 ##    Bootstrap pooled CI = [0.183, 0.584] ##    80% of bootstrap samples have confidence intervals that do not span zero. ##       80% positive. ##       0% negative. ## Matching Results: ##    Complete estimate = 0.479 ##    Complete CI = [0.388, 0.571] ##    Bootstrap pooled estimate = 0.462 ##    Bootstrap weighted pooled estimate = 0.46 ##    Bootstrap pooled CI = [0.319, 0.605] ##    100% of bootstrap samples have confidence intervals that do not span zero. ##       100% positive. ##       0% negative. ## Matching-1-to-3 Results: ##    Complete estimate = 0.472 ##    Complete CI = [0.411, 0.533] ##    Bootstrap pooled estimate = 0.475 ##    Bootstrap weighted pooled estimate = 0.465 ##    Bootstrap pooled CI = [0.293, 0.657] ##    100% of bootstrap samples have confidence intervals that do not span zero. ##       100% positive. ##       0% negative. ## MatchIt Results: ##    Complete estimate = 0.513 ##    Complete CI = [0.264, 0.762] ##    Bootstrap pooled estimate = 0.532 ##    Bootstrap weighted pooled estimate = 0.529 ##    Bootstrap pooled CI = [0.282, 0.782] ##    100% of bootstrap samples have confidence intervals that do not span zero. ##       100% positive. ##       0% negative. plot(tutoring.boot) hist(tutoring.boot) boxplot(tutoring.boot) matrixplot(tutoring.boot) tutoring.bal <- balance(tutoring.boot) tutoring.bal ## Unadjusted balance: 1.83221548386189 ##                   Complete  Bootstrap ## Stratification  0.02923077 0.03361538 ## ctree           0.04384615 0.07207692 ## rpart           0.07846154 0.08769231 ## Matching        0.04521604 0.05690085 ## Matching-1-to-3 0.03054791 0.05275685 ## MatchIt         0.05078077 0.06666851 plot(tutoring.bal) boxplot(tutoring.bal)"},{"path":"/articles/PSAboot.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Bootstrapping for Propensity Score Analysis","text":"Bryer, J.M. (2013). TriMatch: Propensity Score Matching Non-Binary Treatments. R package version 0.9.1. https://github.com/jbryer/TriMatch Helmreich, J.E., Pruzek, R.M. (2009). PSAgraphics: R Package Support Propensity Score Analysis. Journal Statistical Software 29(6), 1-23. https://www.jstatsoft.org/v29/i06/. Ho, D.E., Imai, K., King, G., & Stuart, E.. (2011). MatchIt: Nonparametric Preprocessing Parametric Causal Inference. Journal Statistical Software, (42) 8, 1-28. URL https://www.jstatsoft.org/v42/i08/ Hothorn, T., Hornik, K., & Zeileis, . (2006). Unbiased Recursive Partitioning: Conditional Inference Framework. Journal Computational Graphical Statistics, 15(3), 651-674. Lalonde, R. (1986). Evaluating econometric evaluations training programs experimental data. American Economic Review 76: 604-620. Dehejia, R.H. Wahba, S. (1999). Causal Effects Nonexperimental Studies: Re-Evaluating Evaluation Training Programs. Journal American Statistical Association 94: 1053-1062. R Core Team (2013). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL https://www.r-project.org/. Rosenbaum, P.R. (2012). Testing one hypothesis twice observational studies. Biometrika, 99, 4, 763-774. Rosenbaum, P.R., & Rubin, D.B. (1983). central role propensity score observational studies causal effects. Biometrika, 70, 1, 41-55. Sekhon, J.S. (2011). Multivariate Propensity Score Matching Software Automated Balance Optimization: Matching Package R. Journal Statistical Software, 42(7), 1-52. URL https://www.jstatsoft.org/v42/i07/. Therneau, T., Atkinson, B., & Ripley, B. (2013). rpart: Recursive Partitioning. R package version 4.1-3. https://cran.r-project.org/package=rpart","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Bryer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryer J (2023). PSAboot: Bootstrapping Propensity Score Analysis. R package version 1.3.8, https://github.com/jbryer/PSAboot.","code":"@Manual{,   title = {PSAboot: Bootstrapping for Propensity Score Analysis},   author = {Jason Bryer},   year = {2023},   note = {R package version 1.3.8},   url = {https://github.com/jbryer/PSAboot}, }"},{"path":"/index.html","id":"id_-bootstrapping-propensity-score-analysis","dir":"","previous_headings":"","what":"Bootstrapping for Propensity Score Analysis","title":"Bootstrapping for Propensity Score Analysis","text":"Package website: https://jbryer.github.io/PSAboot/ Poster: https://github.com/jbryer/PSAboot/blob/master/Poster/PSAboot_Poster.pdf popularity propensity score methods estimating causal effects observational studies increase, choices researchers methods use also increased. Estimated treatment effects may sensitive choice method. One approach test sensitivity method choice test null hypothesis using one method (Rosenbaum, 2012). wide availability high power computers resampling methods bootstrapping (Efron, 1979) become popular providing estimates sampling distribution. paper introduces PSAboot R package provides functions bootstrapping propensity score methods. deviates traditional bootstrapping methods allowing different sampling specifications treatment control groups, mainly ensure ratio treatment--control observations consistent. approach can also used situations imbalance number treatment control observations allowing /sampling. Lastly, estimating balance statistics treatment effects bootstrap sample can compare distributions across multiple propensity score methods examine relative performance methods.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bootstrapping for Propensity Score Analysis","text":"can download CRAN using: latest development version using remotes package:","code":"install.packages('PSAboot') remotes::install_github('jbryer/PSAboot')"},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Bootstrapping for Propensity Score Analysis","text":"Please note PSAboot project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/PSAboot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapping for Propensity Score Analysis — PSAboot-package","title":"Bootstrapping for Propensity Score Analysis — PSAboot-package","text":"Bootstrapping procedures Propensity Score Analysis.","code":""},{"path":"/reference/PSAboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapping for propensity score analysis — PSAboot","title":"Bootstrapping for propensity score analysis — PSAboot","text":"Bootstrapping become popular resampling method estimating sampling distributions. propensity score analysis (PSA) become popular estimating causal effects observational studies. function implements bootstrapping specifically PSA. Like typical bootstrapping methods, function estimates treatment effects M random samples. However, unlike typical bootstrap methods, function allows separate sample sizes treatment control units. , certain circumstances (e.g. ratio treatment--control units large) bootstrapping control units may desirable. Additionally, function provides framework use multiple PSA methods bootstrap sample.","code":""},{"path":"/reference/PSAboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapping for propensity score analysis — PSAboot","text":"","code":"PSAboot(   Tr,   Y,   X,   M = 100,   formu = as.formula(paste0(\"treat ~ \", paste0(names(X), collapse = \" + \"))),   control.ratio = 5,   control.sample.size = min(control.ratio * min(table(Tr)), max(table(Tr))),   control.replace = TRUE,   treated.sample.size = min(table(Tr)),   treated.replace = TRUE,   methods = getPSAbootMethods(),   parallel = TRUE,   seed = NULL,   ... )"},{"path":"/reference/PSAboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapping for propensity score analysis — PSAboot","text":"Tr numeric (0 1) logical vector treatment indicators. Y vector outcome variable X matrix data frame covariates used estimate propensity scores. M number bootstrap samples generate. formu formula used estimating propensity scores. default use covariates X. control.ratio ratio control units sample relative treatment units. control.sample.size size bootstrap sample control units. control.replace whether use replacement sampling control units. treated.sample.size size bootstrap sample treatment units. default uses treatment units bootstrap sample. treated.replace whether use replacement sampling treated units. methods named vector functions PSA method use. parallel whether run bootstrap samples parallel. seed random seed. iteration, , use seed seed + . ... parameters passed Match psa.strata","code":""},{"path":"/reference/PSAboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapping for propensity score analysis — PSAboot","text":"list following elements:  overall.summary Data frame results using complete \t\t                         dataset (.e. unbootstrapped results). overall.details Objects returned method complete dataset. pooled.summary Data frame results bootstrap sample. pooled.details List objects returned method  \t\t        bootstrap sample. control.sample.size sample size used control units. treated.sample.size sample size used treated units. control.replace whether control units sampled replacement. treated.replace whether treated units sampled replacement. Tr vector treatment assignment. Y vector outcome. X matrix data frame covariates. M number bootstrap samples.","code":""},{"path":[]},{"path":"/reference/PSAboot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapping for propensity score analysis — PSAboot","text":"","code":"# \\donttest{ library(PSAboot) data(pisa.psa.cols) data(pisausa) bm.usa <- PSAboot(Tr = as.integer(pisausa$PUBPRIV) - 1,     Y = pisausa$Math,     X = pisausa[,pisa.psa.cols],     control.ratio = 5, M = 100, seed = 2112) #> 100 bootstrap samples using 6 methods. #> Bootstrap sample sizes: #>    Treated=345 (100%) with replacement. #>    Control=4888 (35%) with replacement. #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #>   # }"},{"path":"/reference/as.data.frame.PSAbootSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the results of PSAboot summary to a data frame. — as.data.frame.PSAbootSummary","title":"Convert the results of PSAboot summary to a data frame. — as.data.frame.PSAbootSummary","text":"Convert results PSAboot summary data frame.","code":""},{"path":"/reference/as.data.frame.PSAbootSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the results of PSAboot summary to a data frame. — as.data.frame.PSAbootSummary","text":"","code":"# S3 method for PSAbootSummary as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/as.data.frame.PSAbootSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the results of PSAboot summary to a data frame. — as.data.frame.PSAbootSummary","text":"x results summary.PSAboot row.names row names. optional unused. ... unused.","code":""},{"path":"/reference/as.data.frame.PSAbootSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the results of PSAboot summary to a data frame. — as.data.frame.PSAbootSummary","text":"data.frame.","code":""},{"path":"/reference/balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a summary of the balance for all bootstrap samples. — balance","title":"Returns a summary of the balance for all bootstrap samples. — balance","text":"method provides crude overall measures balance.","code":""},{"path":"/reference/balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a summary of the balance for all bootstrap samples. — balance","text":"","code":"balance(psaboot, na.rm = TRUE, pool.fun = mean)"},{"path":"/reference/balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a summary of the balance for all bootstrap samples. — balance","text":"psaboot results PSAboot. na.rm NAs removed. NAs generally occur insufficient sample particular covariate unused level. pool.fun function specifying effect sizes across covariates combined. Possible values include mean (default), q25, q75, median, max,  function takes vector numeric values.","code":""},{"path":"/reference/balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a summary of the balance for all bootstrap samples. — balance","text":"list three elements: unadjusted named numeric vector unadjusted effect size \t                  adjustment covariate complete matrix adjusted effect size covariate (columns) \t                method (rows). pooled matrix mean adjusted effect size covariates \t              method (columns) bootstrap sample (rows). balances list M x n covariates matrix method.","code":""},{"path":"/reference/balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a summary of the balance for all bootstrap samples. — balance","text":"","code":"# \\donttest{ library(PSAboot) data(pisa.psa.cols) data(pisausa) bm.usa <- PSAboot(Tr = as.integer(pisausa$PUBPRIV) - 1,     Y = pisausa$Math,     X = pisausa[,pisa.psa.cols],     control.ratio = 5, M = 100, seed = 2112) #> 100 bootstrap samples using 6 methods. #> Bootstrap sample sizes: #>    Treated=345 (100%) with replacement. #>    Control=4888 (35%) with replacement. #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #>  bm.usa.bal <- balance(bm.usa)  # }"},{"path":"/reference/balance.matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns balance for each covariate from propensity score matching. — balance.matching","title":"Returns balance for each covariate from propensity score matching. — balance.matching","text":"function function primarily used [PSAboot::balance()] probably need called directly.","code":""},{"path":"/reference/balance.matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns balance for each covariate from propensity score matching. — balance.matching","text":"","code":"balance.matching(index.treated, index.control, covs)"},{"path":"/reference/balance.matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns balance for each covariate from propensity score matching. — balance.matching","text":"index.treated vector index treated rows covs. index.control vector index control rows covs. covs data frame matrix covariates. Factors already recoded. See cv.trans.psa","code":""},{"path":"/reference/balance.matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns balance for each covariate from propensity score matching. — balance.matching","text":"named vector one element per covariate.","code":""},{"path":"/reference/boot.ctree.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratification using classification trees for bootstrapping. — boot.ctree","title":"Stratification using classification trees for bootstrapping. — boot.ctree","text":"Stratification using classification trees bootstrapping.","code":""},{"path":"/reference/boot.ctree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratification using classification trees for bootstrapping. — boot.ctree","text":"","code":"boot.ctree(Tr, Y, X, X.trans, formu, minStrata = 5, ...)"},{"path":"/reference/boot.ctree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratification using classification trees for bootstrapping. — boot.ctree","text":"Tr vector indicating treatment assignment. Y vector outcome. X matrix data frame covariates. X.trans data frame X factors recoded. See cv.trans.psa formu formula use estimate propensity scores. Note dependent varaible (.e. treatment varaible) name updated using Tr vector. minStrata minimum number treatment control units within strata  include strata. ... parameters passed PSAboot","code":""},{"path":"/reference/boot.ctree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratification using classification trees for bootstrapping. — boot.ctree","text":"list three elements:  summary named numeric vector (minimum estimate,          ci.min, ci.max values allowed) balance named numeric vector one element per          covariate listed X.trans representing balance statistic          (usually standardized effect size adjustment) details arbitrary object contains full results         analysis","code":""},{"path":"/reference/boot.matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Matching package implementation for bootstrapping. — boot.matching","title":"Matching package implementation for bootstrapping. — boot.matching","text":"Matching package implementation bootstrapping.","code":""},{"path":"/reference/boot.matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matching package implementation for bootstrapping. — boot.matching","text":"","code":"boot.matching(Tr, Y, X, X.trans, formu, estimand = \"ATE\", ...)"},{"path":"/reference/boot.matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matching package implementation for bootstrapping. — boot.matching","text":"Tr vector indicating treatment assignment. Y vector outcome. X matrix data frame covariates. X.trans data frame X factors recoded. See cv.trans.psa formu formula use estimate propensity scores. Note dependent varaible (.e. treatment varaible) name updated using Tr vector. estimand character string estimand, either ATE, ATT, ATC. See Match details. ... parameters passed Match.","code":""},{"path":"/reference/boot.matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matching package implementation for bootstrapping. — boot.matching","text":"list three elements:  summary named numeric vector (minimum estimate,          ci.min, ci.max values allowed) balance named numeric vector one element per          covariate listed X.trans representing balance statistic          (usually standardized effect size adjustment) details arbitrary object contains full results         analysis","code":""},{"path":"/reference/boot.matchit.html","id":null,"dir":"Reference","previous_headings":"","what":"MatchIt package implementation for bootstrapping. — boot.matchit","title":"MatchIt package implementation for bootstrapping. — boot.matchit","text":"MatchIt package implementation bootstrapping.","code":""},{"path":"/reference/boot.matchit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MatchIt package implementation for bootstrapping. — boot.matchit","text":"","code":"boot.matchit(Tr, Y, X, X.trans, formu, ...)"},{"path":"/reference/boot.matchit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MatchIt package implementation for bootstrapping. — boot.matchit","text":"Tr vector indicating treatment assignment. Y vector outcome. X matrix data frame covariates. X.trans data frame X factors recoded. See cv.trans.psa formu formula use estimate propensity scores. Note dependent varaible (.e. treatment varaible) name updated using Tr vector. ... parameters passed PSAboot","code":""},{"path":"/reference/boot.matchit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MatchIt package implementation for bootstrapping. — boot.matchit","text":"list three elements:  summary named numeric vector (minimum estimate,          ci.min, ci.max values allowed) balance named numeric vector one element per          covariate listed X.trans representing balance statistic          (usually standardized effect size adjustment) details arbitrary object contains full results         analysis","code":""},{"path":"/reference/boot.rpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratification using classification trees for bootstrapping. — boot.rpart","title":"Stratification using classification trees for bootstrapping. — boot.rpart","text":"Stratification using classification trees bootstrapping.","code":""},{"path":"/reference/boot.rpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratification using classification trees for bootstrapping. — boot.rpart","text":"","code":"boot.rpart(Tr, Y, X, X.trans, formu, minStrata = 5, ...)"},{"path":"/reference/boot.rpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratification using classification trees for bootstrapping. — boot.rpart","text":"Tr vector indicating treatment assignment. Y vector outcome. X matrix data frame covariates. X.trans data frame X factors recoded. See cv.trans.psa formu formula use estimate propensity scores. Note dependent varaible (.e. treatment varaible) name updated using Tr vector. minStrata minimum number treatment control units within strata  include strata. ... parameters passed PSAboot","code":""},{"path":"/reference/boot.rpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratification using classification trees for bootstrapping. — boot.rpart","text":"list three elements:  summary named numeric vector (minimum estimate,          ci.min, ci.max values allowed) balance named numeric vector one element per          covariate listed X.trans representing balance statistic          (usually standardized effect size adjustment) details arbitrary object contains full results         analysis","code":""},{"path":"/reference/boot.strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratification implementation for bootstrapping. — boot.strata","title":"Stratification implementation for bootstrapping. — boot.strata","text":"Stratification implementation bootstrapping.","code":""},{"path":"/reference/boot.strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratification implementation for bootstrapping. — boot.strata","text":"","code":"boot.strata(Tr, Y, X, X.trans, formu, nstrata = 5, ...)"},{"path":"/reference/boot.strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratification implementation for bootstrapping. — boot.strata","text":"Tr vector indicating treatment assignment. Y vector outcome. X matrix data frame covariates. X.trans data frame X factors recoded. See cv.trans.psa formu formula use estimate propensity scores. Note dependent varaible (.e. treatment varaible) name updated using Tr vector. nstrata number strata divide propensity scores. ... parameters passed PSAboot","code":""},{"path":"/reference/boot.strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratification implementation for bootstrapping. — boot.strata","text":"list three elements:  summary named numeric vector (minimum estimate,          ci.min, ci.max values allowed) balance named numeric vector one element per          covariate listed X.trans representing balance statistic          (usually standardized effect size adjustment) details arbitrary object contains full results         analysis","code":""},{"path":"/reference/boot.weighting.html","id":null,"dir":"Reference","previous_headings":"","what":"Propensity score weighting implementation for bootstrapping. — boot.weighting","title":"Propensity score weighting implementation for bootstrapping. — boot.weighting","text":"Propensity score weighting implementation bootstrapping.","code":""},{"path":"/reference/boot.weighting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propensity score weighting implementation for bootstrapping. — boot.weighting","text":"","code":"boot.weighting(Tr, Y, X, X.trans, formu, estimand = \"ATE\", ...)"},{"path":"/reference/boot.weighting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propensity score weighting implementation for bootstrapping. — boot.weighting","text":"Tr vector indicating treatment assignment. Y vector outcome. X matrix data frame covariates. X.trans data frame X factors recoded. See cv.trans.psa formu formula use estimate propensity scores. Note dependent varaible (.e. treatment varaible) name updated using Tr vector. estimand treatment effect estimate. Values can ATE, ATT, ATC, ATM. ... parameters passed PSAboot","code":""},{"path":"/reference/boot.weighting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propensity score weighting implementation for bootstrapping. — boot.weighting","text":"list three elements:  summary named numeric vector (minimum estimate,          ci.min, ci.max values allowed) balance named numeric vector one element per          covariate listed X.trans representing balance statistic          (usually standardized effect size adjustment) details arbitrary object contains full results         analysis","code":""},{"path":"/reference/boxplot.PSAboot.balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot of the balance statistics for bootstrapped samples. — boxplot.PSAboot.balance","title":"Boxplot of the balance statistics for bootstrapped samples. — boxplot.PSAboot.balance","text":"Boxplot balance statistics bootstrapped samples.","code":""},{"path":"/reference/boxplot.PSAboot.balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot of the balance statistics for bootstrapped samples. — boxplot.PSAboot.balance","text":"","code":"# S3 method for PSAboot.balance boxplot(   x,   unadjusted.color = \"red\",   pooled.color = \"blue\",   point.size = 3,   point.alpha = 0.5,   ... )"},{"path":"/reference/boxplot.PSAboot.balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot of the balance statistics for bootstrapped samples. — boxplot.PSAboot.balance","text":"x results balance unadjusted.color color used unadjusted effect size. pooled.color color used mean bootstrap effect size. point.size size points. point.alpha transparency level points. ... parameters passed facet_wrap","code":""},{"path":"/reference/boxplot.PSAboot.balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot of the balance statistics for bootstrapped samples. — boxplot.PSAboot.balance","text":"ggplot2 expression.","code":""},{"path":"/reference/boxplot.PSAboot.balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplot of the balance statistics for bootstrapped samples. — boxplot.PSAboot.balance","text":"","code":"# \\donttest{ library(PSAboot) data(pisa.psa.cols) data(pisausa) bm.usa <- PSAboot(Tr = as.integer(pisausa$PUBPRIV) - 1,     Y = pisausa$Math,     X = pisausa[,pisa.psa.cols],     control.ratio = 5, M = 100, seed = 2112) #> 100 bootstrap samples using 6 methods. #> Bootstrap sample sizes: #>    Treated=345 (100%) with replacement. #>    Control=4888 (35%) with replacement. #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #>  bm.usa.bal <- balance(bm.usa) boxplot(bm.usa.bal, nrow = 1) #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: Removed 5719 rows containing non-finite values (`stat_boxplot()`). #> Warning: Removed 56 rows containing missing values (`geom_point()`).  # }"},{"path":"/reference/boxplot.PSAboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot of PSA bootstrap results. — boxplot.PSAboot","title":"Boxplot of PSA bootstrap results. — boxplot.PSAboot","text":"Boxplot PSA bootstrap results.","code":""},{"path":"/reference/boxplot.PSAboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot of PSA bootstrap results. — boxplot.PSAboot","text":"","code":"# S3 method for PSAboot boxplot(   x,   bootstrap.mean.color = \"blue\",   bootstrap.ci.color = \"green\",   bootstrap.ci.width = 0.5,   bootstrap.ci.size = 3,   overall.mean.color = \"red\",   tufte = FALSE,   coord.flip = TRUE,   ... )"},{"path":"/reference/boxplot.PSAboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot of PSA bootstrap results. — boxplot.PSAboot","text":"x result PSAboot. bootstrap.mean.color color point bootstrap mean, NA omit. bootstrap.ci.color color confidence intervals bootstrap samples, NA omit. bootstrap.ci.width width confidence interval lines end. bootstrap.ci.size size confidence interval lines. overall.mean.color color point overall (bootstrapping) mean, NA omit. tufte use Tufte's boxplot style. Requires ggthemes package. coord.flip Whether flip coordinates. ... unused","code":""},{"path":"/reference/boxplot.PSAboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot of PSA bootstrap results. — boxplot.PSAboot","text":"ggplot2 expression.","code":""},{"path":"/reference/calculate_ps_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates propensity score weights. — calculate_ps_weights","title":"Calculates propensity score weights. — calculate_ps_weights","text":"Calculates propensity score weights.","code":""},{"path":"/reference/calculate_ps_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates propensity score weights. — calculate_ps_weights","text":"","code":"calculate_ps_weights(treatment, ps, estimand = \"ATE\")"},{"path":"/reference/calculate_ps_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates propensity score weights. — calculate_ps_weights","text":"treatment logical vector treatment status. ps numeric vector propensity scores estimand character string indicating estimand used. Possible values  ATE (average treatment effect),  ATT (average treatment effect treated),  ATC (average treatement effect controls),  ATM (Average Treatment Effect Among Evenly Matchable),  ATO (Average Treatment Effect Among Overlap Populatio)","code":""},{"path":"/reference/getPSAbootMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a vector with the default methods used by PSAboot. — getPSAbootMethods","title":"Returns a vector with the default methods used by PSAboot. — getPSAbootMethods","text":"current default methods : Stratification boot.strata ctree boot.ctree rpart boot.rpart Matching boot.matching MatchIt boot.matchit","code":""},{"path":"/reference/getPSAbootMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a vector with the default methods used by PSAboot. — getPSAbootMethods","text":"","code":"getPSAbootMethods()"},{"path":"/reference/getPSAbootMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a vector with the default methods used by PSAboot. — getPSAbootMethods","text":"vector methods use PSAboot","code":""},{"path":"/reference/getPSAbootMethods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a vector with the default methods used by PSAboot. — getPSAbootMethods","text":"default methods can changed setting PSAboot.methods option using options('PSAboot.methods'=c(...)) ... named list functions.","code":""},{"path":"/reference/hist.PSAboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of PSA bootstrap results — hist.PSAboot","title":"Histogram of PSA bootstrap results — hist.PSAboot","text":"Histogram PSA bootstrap results","code":""},{"path":"/reference/hist.PSAboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of PSA bootstrap results — hist.PSAboot","text":"","code":"# S3 method for PSAboot hist(x, ...)"},{"path":"/reference/hist.PSAboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of PSA bootstrap results — hist.PSAboot","text":"x result PSAboot. ... parameters passed geom_histogram","code":""},{"path":"/reference/hist.PSAboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram of PSA bootstrap results — hist.PSAboot","text":"ggplot2 expression.","code":""},{"path":"/reference/matrixplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix Plot of Bootstrapped Propensity Score Analysis — matrixplot","title":"Matrix Plot of Bootstrapped Propensity Score Analysis — matrixplot","text":"Matrix Plot Bootstrapped Propensity Score Analysis","code":""},{"path":"/reference/matrixplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix Plot of Bootstrapped Propensity Score Analysis — matrixplot","text":"","code":"matrixplot(bm)"},{"path":"/reference/matrixplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix Plot of Bootstrapped Propensity Score Analysis — matrixplot","text":"bm result PSAboot.","code":""},{"path":"/reference/matrixplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix Plot of Bootstrapped Propensity Score Analysis — matrixplot","text":"Nothing returned. Creates plot using [graphics::pairs()] function.","code":""},{"path":"/reference/pisa.psa.cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Character vector representing the list of covariates used for estimating\npropensity scores. — pisa.psa.cols","title":"Character vector representing the list of covariates used for estimating\npropensity scores. — pisa.psa.cols","text":"Character vector representing list covariates used estimating propensity scores.","code":""},{"path":"/reference/pisa.psa.cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Character vector representing the list of covariates used for estimating\npropensity scores. — pisa.psa.cols","text":"character vector covariate names estimating propensity scores.","code":""},{"path":"/reference/pisalux.html","id":null,"dir":"Reference","previous_headings":"","what":"Programme of International Student Assessment (PISA) results from the Luxembourg in 2009. — pisalux","title":"Programme of International Student Assessment (PISA) results from the Luxembourg in 2009. — pisalux","text":"Student results 2009 Programme International Student Assessment (PISA) provided Organization Economic Co-operation Development (OECD). See https://www.oecd.org/pisa/ information including code book.","code":""},{"path":"/reference/pisalux.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Programme of International Student Assessment (PISA) results from the Luxembourg in 2009. — pisalux","text":"data frame 4,622 rows 65 columns. CNT Country SCHOOLID SchoolID ST01Q01 Grade ST04Q01 Sex ST05Q01 Attend ST06Q01 Age ST07Q01 Repeat ST08Q01 home mother ST08Q02 home father ST08Q03 home brothers ST08Q04 home sisters ST08Q05 home grandparents ST08Q06 home others ST10Q01 Mother highest schooling ST12Q01 Mother current job status ST14Q01 Father highest schooling ST16Q01 Father current job status ST19Q01 Language home ST20Q01 Desk ST20Q02 room ST20Q03 Study place ST20Q04 Computer ST20Q05 Software ST20Q06 Internet ST20Q07 Literature ST20Q08 Poetry ST20Q09 Art ST20Q10 Textbooks ST20Q12 Dictionary ST20Q13 Dishwasher ST20Q14 DVD ST21Q01 many cellphones ST21Q02 many TVs ST21Q03 many computers ST21Q04 many cars ST21Q05 many rooms bath shower ST22Q01 many books ST23Q01 Reading enjoyment time ST31Q01 Enrich test language ST31Q02 Enrich mathematics ST31Q03 Enrich science ST31Q05 Remedial test language ST31Q06 Remedial mathematics ST31Q07 Remedial science ST32Q01 school lessons test language ST32Q02 school lessons maths ST32Q03 school lessons science PUBPRIV Public private school STRATIO Student teacher ratio school","code":""},{"path":"/reference/pisalux.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Programme of International Student Assessment (PISA) results from the Luxembourg in 2009. — pisalux","text":"Note missing values imputed using  mice package. Details specific procedure pisa.impute function pisa package.","code":""},{"path":"/reference/pisalux.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Programme of International Student Assessment (PISA) results from the Luxembourg in 2009. — pisalux","text":"Organisation Economic Co-operation Development (2009).             Programme International Student Assessment (PISA).              https://www.oecd.org/pisa/","code":""},{"path":"/reference/pisausa.html","id":null,"dir":"Reference","previous_headings":"","what":"Programme of International Student Assessment (PISA) results from the United\nStates in 2009. — pisausa","title":"Programme of International Student Assessment (PISA) results from the United\nStates in 2009. — pisausa","text":"Student results 2009 Programme International Student Assessment (PISA) provided Organization Economic Co-operation Development (OECD). See https://www.oecd.org/pisa/ information including code book.","code":""},{"path":"/reference/pisausa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Programme of International Student Assessment (PISA) results from the United\nStates in 2009. — pisausa","text":"data frame 5,233 rows 65 columns. CNT Country SCHOOLID SchoolID ST01Q01 Grade ST04Q01 Sex ST05Q01 Attend ST06Q01 Age ST07Q01 Repeat ST08Q01 home mother ST08Q02 home father ST08Q03 home brothers ST08Q04 home sisters ST08Q05 home grandparents ST08Q06 home others ST10Q01 Mother highest schooling ST12Q01 Mother current job status ST14Q01 Father highest schooling ST16Q01 Father current job status ST19Q01 Language home ST20Q01 Desk ST20Q02 room ST20Q03 Study place ST20Q04 Computer ST20Q05 Software ST20Q06 Internet ST20Q07 Literature ST20Q08 Poetry ST20Q09 Art ST20Q10 Textbooks ST20Q12 Dictionary ST20Q13 Dishwasher ST20Q14 DVD ST21Q01 many cellphones ST21Q02 many TVs ST21Q03 many computers ST21Q04 many cars ST21Q05 many rooms bath shower ST22Q01 many books ST23Q01 Reading enjoyment time ST31Q01 Enrich test language ST31Q02 Enrich mathematics ST31Q03 Enrich science ST31Q05 Remedial test language ST31Q06 Remedial mathematics ST31Q07 Remedial science ST32Q01 school lessons test language ST32Q02 school lessons maths ST32Q03 school lessons science PUBPRIV Public private school STRATIO Student teacher ratio school","code":""},{"path":"/reference/pisausa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Programme of International Student Assessment (PISA) results from the United\nStates in 2009. — pisausa","text":"Note missing values imputed using  mice package. Details specific procedure pisa.impute function pisa package.","code":""},{"path":"/reference/pisausa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Programme of International Student Assessment (PISA) results from the United\nStates in 2009. — pisausa","text":"Organisation Economic Co-operation Development (2009).             Programme International Student Assessment (PISA).              https://www.oecd.org/pisa/","code":""},{"path":"/reference/plot.PSAboot.balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for balance. — plot.PSAboot.balance","title":"Plot method for balance. — plot.PSAboot.balance","text":"Plot method balance.","code":""},{"path":"/reference/plot.PSAboot.balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for balance. — plot.PSAboot.balance","text":"","code":"# S3 method for PSAboot.balance plot(   x,   unadjusted.color = \"red\",   complete.color = \"blue\",   pooled.color = \"black\",   ... )"},{"path":"/reference/plot.PSAboot.balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for balance. — plot.PSAboot.balance","text":"x results balance unadjusted.color color vertical line representing mean  unadjusted effect size covariates. complete.color color vertical line representing mean adjusted effect size covariates using complete dataset. pooled.color color vertical line representing mean adjusted effect size covariates across bootstrapped samples. ... currently unused.","code":""},{"path":"/reference/plot.PSAboot.balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for balance. — plot.PSAboot.balance","text":"ggplot2 expression.","code":""},{"path":"/reference/plot.PSAboot.balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for balance. — plot.PSAboot.balance","text":"","code":"# \\donttest{ library(PSAboot) data(pisa.psa.cols) data(pisausa) bm.usa <- PSAboot(Tr = as.integer(pisausa$PUBPRIV) - 1,     Y = pisausa$Math,     X = pisausa[,pisa.psa.cols],     control.ratio = 5, M = 100, seed = 2112) #> 100 bootstrap samples using 6 methods. #> Bootstrap sample sizes: #>    Treated=345 (100%) with replacement. #>    Control=4888 (35%) with replacement. #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: contrasts dropped from factor ST10Q01 due to missing levels #> Warning: contrasts dropped from factor ST14Q01 due to missing levels #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #>  bm.usa.bal <- balance(bm.usa) plot(bm.usa.bal) #> Warning: Removed 1 rows containing non-finite values (`stat_density()`).  # }"},{"path":"/reference/plot.PSAboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of PSAboot — plot.PSAboot","title":"Plot the results of PSAboot — plot.PSAboot","text":"Plot results PSAboot","code":""},{"path":"/reference/plot.PSAboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of PSAboot — plot.PSAboot","text":"","code":"# S3 method for PSAboot plot(   x,   sort = \"all\",   ci.sig.color = \"red\",   plot.overall = FALSE,   plot.bootstrap = TRUE,   ... )"},{"path":"/reference/plot.PSAboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of PSAboot — plot.PSAboot","text":"x result PSAboot. sort sort rows mean difference. Options sort using mean difference matching, stratification,  individually, sorting. ci.sig.color color used confidence intervals span zero. plot.overall whether plot vertical lines overall (non-bootstrapped) estimate confidence interval. plot.bootstrap whether plot vertical lines bootstrap pooled estimate confidence interval. ... currently unused.","code":""},{"path":"/reference/plot.PSAboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of PSAboot — plot.PSAboot","text":"ggplot2 expression.","code":""},{"path":"/reference/print.PSAboot.balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for balance. — print.PSAboot.balance","title":"Print method for balance. — print.PSAboot.balance","text":"crude measure overall balance. Absolute value standardized effect sizes calculated covariate. Overall balance statistics mean effect sizes adjustment method across bootstrap samples.","code":""},{"path":"/reference/print.PSAboot.balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for balance. — print.PSAboot.balance","text":"","code":"# S3 method for PSAboot.balance print(x, na.rm = TRUE, ...)"},{"path":"/reference/print.PSAboot.balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for balance. — print.PSAboot.balance","text":"x results balance. na.rm whether NA balance statistics removed averaging . ... currently unused.","code":""},{"path":"/reference/print.PSAboot.balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for balance. — print.PSAboot.balance","text":"valued returned.","code":""},{"path":"/reference/print.PSAboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Print results of PSAboot — print.PSAboot","title":"Print results of PSAboot — print.PSAboot","text":"Print results PSAboot","code":""},{"path":"/reference/print.PSAboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print results of PSAboot — print.PSAboot","text":"","code":"# S3 method for PSAboot print(x, ...)"},{"path":"/reference/print.PSAboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print results of PSAboot — print.PSAboot","text":"x result PSAboot. ... currently unused.","code":""},{"path":"/reference/print.PSAboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print results of PSAboot — print.PSAboot","text":"Nothing returned. S3 generic function calls [PSAboot::summary()] function.","code":""},{"path":"/reference/print.PSAbootSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for PSAboot Summary. — print.PSAbootSummary","title":"Print method for PSAboot Summary. — print.PSAbootSummary","text":"Print method PSAboot Summary.","code":""},{"path":"/reference/print.PSAbootSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for PSAboot Summary. — print.PSAbootSummary","text":"","code":"# S3 method for PSAbootSummary print(x, digits = 3, ...)"},{"path":"/reference/print.PSAbootSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for PSAboot Summary. — print.PSAbootSummary","text":"x result summary.PSAboot digits desired number digits decimal point. ... unused.","code":""},{"path":"/reference/print.PSAbootSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for PSAboot Summary. — print.PSAbootSummary","text":"Nothing returned.","code":""},{"path":"/reference/psa.strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Propensity Score Analysis using Stratification — psa.strata","title":"Propensity Score Analysis using Stratification — psa.strata","text":"Propensity Score Analysis using Stratification","code":""},{"path":"/reference/psa.strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propensity Score Analysis using Stratification — psa.strata","text":"","code":"psa.strata(Y, Tr, strata, trim = 0, minStrata = 5)"},{"path":"/reference/psa.strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propensity Score Analysis using Stratification — psa.strata","text":"Y response variable. Tr treatment variable. strata strata identifier. trim allows trimmed mean outcome measure, trim 0 .5 (.5 implying median). minStrata minimum number treatment control units within strata  include strata.","code":""},{"path":"/reference/psa.strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propensity Score Analysis using Stratification — psa.strata","text":"character vector containing summary.strata, ATE, se.wtd, approx.t, df, CI.95.","code":""},{"path":"/reference/q25.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the 25th percentile. — q25","title":"Return the 25th percentile. — q25","text":"Return 25th percentile.","code":""},{"path":"/reference/q25.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the 25th percentile. — q25","text":"","code":"q25(x, na.rm = FALSE, ...)"},{"path":"/reference/q25.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the 25th percentile. — q25","text":"x numeric vector. na.rm logical; true, NA NaN's removed x quantiles computed ... parameters passed quantile.","code":""},{"path":"/reference/q25.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the 25th percentile. — q25","text":"25th percentile.","code":""},{"path":"/reference/q75.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the 75th percentile. — q75","title":"Returns the 75th percentile. — q75","text":"Returns 75th percentile.","code":""},{"path":"/reference/q75.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the 75th percentile. — q75","text":"","code":"q75(x, na.rm = FALSE, ...)"},{"path":"/reference/q75.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the 75th percentile. — q75","text":"x numeric vector. na.rm logical; true, NA NaN's removed x quantiles computed ... parameters passed quantile.","code":""},{"path":"/reference/q75.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the 75th percentile. — q75","text":"75th percentile.","code":""},{"path":"/reference/summary.PSAboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of pooled results from PSAboot — summary.PSAboot","title":"Summary of pooled results from PSAboot — summary.PSAboot","text":"Summary pooled results PSAboot","code":""},{"path":"/reference/summary.PSAboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of pooled results from PSAboot — summary.PSAboot","text":"","code":"# S3 method for PSAboot summary(object, ...)"},{"path":"/reference/summary.PSAboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of pooled results from PSAboot — summary.PSAboot","text":"object result PSAboot. ... currently unused.","code":""},{"path":"/reference/summary.PSAboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of pooled results from PSAboot — summary.PSAboot","text":"list pooled summary statistics. list results easch PSA method. method list        contains following elements:  sig.tot.per Percentage boostrap samples confidence interval span zero. boostrap.mean Weighted mean difference across bootstrap samples. boostrap.ci Overall confidence interval across bootstrap samples. bootstrap.weighted.mean Overall weighted bootstrap mean. percent.sig Contingency table number bootstrap samples span zero. complete Results summary PSA method.","code":""},{"path":"/news/index.html","id":"psaboot-138","dir":"Changelog","previous_headings":"","what":"PSAboot 1.3.8","title":"PSAboot 1.3.8","text":"Fix change t.test paired data use formula notation.","code":""},{"path":"/news/index.html","id":"psaboot-137","dir":"Changelog","previous_headings":"","what":"PSAboot 1.3.7","title":"PSAboot 1.3.7","text":"Added propensity score weighting. Fixed bug balance table wasn’t combined correctly covariates specified correct order.","code":""},{"path":"/news/index.html","id":"psaboot-136","dir":"Changelog","previous_headings":"","what":"PSAboot 1.3.6","title":"PSAboot 1.3.6","text":"CRAN release: 2023-03-22 Update re-release CRAN. Fixes pass CRAN check.","code":""},{"path":"/news/index.html","id":"psaboot-134","dir":"Changelog","previous_headings":"","what":"PSAboot 1.3.4","title":"PSAboot 1.3.4","text":"Update compatibility multilevelPSA package.","code":""},{"path":"/news/index.html","id":"psaboot-133","dir":"Changelog","previous_headings":"","what":"PSAboot 1.3.3","title":"PSAboot 1.3.3","text":"Fixed new R CMD CHECK notes warnings. Updated new version party package.","code":""},{"path":"/news/index.html","id":"psaboot-130","dir":"Changelog","previous_headings":"","what":"PSAboot 1.3.0","title":"PSAboot 1.3.0","text":"Refactored function calculating balance shared across matching procedures. Added vignette impact matching order.","code":""},{"path":"/news/index.html","id":"psaboot-120","dir":"Changelog","previous_headings":"","what":"PSAboot 1.2.0","title":"PSAboot 1.2.0","text":"Fixed issue certain circumnstances NA effect estimate. removed. Added better error checking classification tree splits occurs.","code":""},{"path":"/news/index.html","id":"psaboot-110","dir":"Changelog","previous_headings":"","what":"PSAboot 1.1.0","title":"PSAboot 1.1.0","text":"summary function now includes weighted pooled estimate. estimate weighted using inverse balance estimates bootstrap samples better balance weighted estimate worse balance. can now specify balance estimates aggregated. Possible values include mean (default), q25, q75, median, max. Added getPSAbootMethods global R option “PSAboot.methods” return default set functions use PSAboot. Added number parameters boxplot function including tufte style ggthemes package.","code":""},{"path":"/news/index.html","id":"psaboot-100","dir":"Changelog","previous_headings":"","what":"PSAboot 1.0.0","title":"PSAboot 1.0.0","text":"Initial version PSAboot package bootstrapping propensity score analysis.","code":""}]
